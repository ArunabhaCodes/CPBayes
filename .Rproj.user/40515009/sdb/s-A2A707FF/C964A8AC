{
    "collab_server" : "",
    "contents" : "---\ntitle: \"CPBayes (Bayesian meta analysis for studying cross-phenotype genetic associations) package\"\nauthor: \"Arunabha Majumdar, Tanushree Haldar, John Witte\"\ndate: \"`r Sys.Date()`\"\noutput: rmarkdown::html_vignette\nvignette: >\n  %\\VignetteIndexEntry{CPBayes tutorial}\n  %\\VignetteEngine{knitr::rmarkdown}\n  %\\VignetteEncoding{UTF-8}\n---\n# Introduction\nSimultaneous analysis of genetic associations with multiple phenotypes may reveal shared genetic susceptibility across traits (pleiotropy). CPBayes is a Bayesian meta analysis approach for studying cross-phenotype genetic associations. It uses summary-level data across multiple phenotypes to simultaneously measure the evidence of aggregate-level pleiotropic association and estimate an optimal subset of traits associated with the risk locus. CPBayes is based on a spike and slab prior and is implemented by Markov chain Monte Carlo (MCMC) technique Gibbs sampling. \n\nThis R-package consists of four main functions: \n\n1. cpbayes_uncor: This function implements CPBayes for uncorrelated summary statistics. The summary statistics across traits/studies are uncorrelated when the studies have no overlapping subject. \n1. cpbayes_cor: This function implements CPBayes for correlated summary statistics. The summary statistics across traits/studies are correlated when the studies have overlapping subjects or the phenotypes were measured in a cohort study. \n1. post\\_summaries: This function summarizes the MCMC data produced by the two main functions cpbayes\\_uncor or cpbayes\\_cor listed above. It computes additional summaries to provide a better insight into a pleiotropic signal. It works in the same way for both cpbayes\\_uncor and cpbayes\\_cor.\n1. estimate\\_corln: This function computes an approximate correlation matrix of the beta-hat vector for multiple overlapping case-control studies or a cohort study using the sample-overlap matrices.\n\n# Installation\n\nYou can install CPBayes from CRAN.\n\n```{r install_package, eval=FALSE, collapse = TRUE}\ninstall.packages(\"CPBayes\")\nlibrary(\"CPBayes\")\n```\n\n# An example demonstrating how to run CPBayes for uncorrelated summary statistics. \n\nGet the path to the data.\n\n```{r load_Beta, collapse = TRUE}\nlibrary(\"CPBayes\")\n# Load the beta hat vector\nBetaHatfile <- system.file(\"extdata\", \"BetaHat.rda\", package = \"CPBayes\")\nload(BetaHatfile)\nBetaHat\n```\n\nBetaHat contains an example data of the main genetic effect (beta/log(odds ratio)) estimates for a single nucleotide polymorphism (SNP) obtained from 10 separate case-control studies for 10 different diseases. In each case-control study comprising a distinct set of 7000 cases and 10000 controls, we fit a logistic regression of the case-control status on the genotype coded as the minor allele count for all the individuals in the sample. One can also include various covariates, such as, age, gender, principal components (PCs) of ancestries in the logistic regression. From each logistic regression for a disease, we obtain the estimate of the main genetic association parameter (beta/log(odds ratio)) along with the corresponding standard error. Since the studies do not have any overlapping subject, beta-hat across the diseases are uncorrelated.  \n\n```{r load_SE, collapse = TRUE}\n# Load the standard error vector\nSEfile <- system.file(\"extdata\", \"SE.rda\", package = \"CPBayes\")\nload(SEfile)\nSE\n```\n\n\nSE contains the standard errors corresponding to the above beta hat vector across 10 separate case-control studies. \n\n\nNext we specify the name of the diseases/phenotypes and the genetic variant.\n```{r names, collapse = TRUE}\n# Specify the name of the traits and the genetic variant.\ntraitNames <- paste(\"Disease\", 1:10, sep = \"\")\nSNP1 <- \"rs1234\"\ntraitNames\nSNP1\n```\n\nNow we implement CPBayes for this example data. Since the studies are non-overlapping, the summary statistics across traits are uncorrelated. Hence we run the the cpbayes\\_uncor function.\n  \n```{r uncor_example, collapse = TRUE}\n# Run the uncorrelated version of CPBayes.\nresult <- cpbayes_uncor(BetaHat, SE, Phenotypes = traitNames, Variant = SNP1)\n```\n\nThere are more options of arguments to pass into the function (see the Arguments section of cpbayes\\_uncor in the CPBayes manual). After running cpbayes\\_uncor, it prints the log10(Bayes factor) (denoted as log10\\_BF) and the subset of associated/non-null traits (denoted as subset) produced by CPBayes. The Bayes factor evaluates the overall pleiotropic association and the subset of non-null traits are the most important phenotypes that underlie the pleiotropic signal. However, the printed outputs are only a part of 'result' which is a list that constitutes of various components. An overall summary of 'result' can be seen by using the str function (as shown below). \n\n```{r result_structure, collapse= TRUE}\n# Overall summary of the primary results produced by cpbayes_uncor.\nstr(result)\n```\n\nresult\\$variantName returns the name of the genetic variant specified by the user. Here, it is 'rs1234'. result\\$log10\\_BF provides the log10(Bayes factor) (discussed above). result\\$PPNA provides the posterior probability of null association which is another measure of the aggregate-level pleiotropic association. result\\$subset provides the optimal subset of associated/non-null traits selected by CPBayes. Thus, for the example data, CPBayes produced a log10(Bayes factor) of 11.4, PPNA of 3.99*10^(-15), and selected Disease7, Disease9, and Disease10 as associated/non-null. A detailed interpretation of all the outputs are described in the Value section of cpbayes\\_uncor in the CPBayes manual. \n\nThe post\\_summaries function provides important insights into an obseved pleiotropic signal, e.g., the direction of associations, posterior mean/median and 95\\% credible interval (Bayesian analog of the confidence interval) of the unknown true genetic effect (beta/odds ratio) on each trait, etc.\n\n```{r post_summary, collapse= TRUE}\n# Post summary of the MCMC data produced by cpbayes_uncor.\nPleioSumm <- post_summaries(result, level = 0.05)  \nstr(PleioSumm)\n```\n\nSo we have to pass the list 'result' returned by cpbayes\\_uncor as the first argument and the 'level' as the second argument into the post\\_summaries function. If 'level' is not specified, the default value is 0.05. Note that post\\_summaries computes (1-level)\\% credible interval of the unknown true genetic effect (beta/odds ratio) on each trait. It estimates the direction of association with the important traits, the vector of trait-specific posterior probability of association (PPAj), etc. For detailed description of different outputs provided by this function, please see the Value section of post_summaries in the CPBayes manual.\n\n# An example demonstrating how to run CPBayes for correlated summary statistics.\n\nNext we demonstrate how to run CPBayes for correlated summary statistics. Get the path to the data.\n\n```{r load_cBeta, collapse = TRUE}\n# Load the beta-hat vector\ndatafile <- system.file(\"extdata\", \"cBetaHat.rda\", package = \"CPBayes\")\nload(datafile)\ncBetaHat\n```\n\nHere 'c' in cBetaHat stands for correlated case. cBetaHat contains an example data of the main genetic association parameter (beta/log(odds ratio)) estimates for a SNP across 10 overlapping case-control studies for 10 different diseases. Each of the 10 studies has a distinct set of 7000 cases and a common set of 10000 controls shared across all the studies. In each case-control study, we fit a logistic regression of the case-control status on the genotype coded as the minor allele count for all the individuals in the sample. One can also include various covariates, such as, age, gender, principal components (PCs) of ancestries in the logistic regression. From each logistic regression for a disease, we obtain the estimate of the main genetic effect (beta/log(odds ratio)) along with the corresponding standard error. Since the studies have overlapping subjects, beta-hat across the diseases are correlated.  \n\n```{r load_cSE, collapse = TRUE}\n# Load the standard error vector\ndatafile <- system.file(\"extdata\", \"cSE.rda\", package = \"CPBayes\")\nload(datafile)\ncSE\n```\n\ncSE contains the standard errors corresponding to the above beta hat vector across 10 overlapping case-control studies. \n\n```{r load_cor, collapse = TRUE}\n# Load the correlation matrix of the beta-hat vector (cBetaHat)\ndatafile <- system.file(\"extdata\", \"cor.rda\", package = \"CPBayes\")\nload(datafile)\ncor\n```\n\nThe correlation matrix of the beta-hat vector (cBetaHat) is given by 'cor' which we estimated by employing the estimate_corln function (demonstrated later in this tutorial) using the sample-overlap matrix (explained later in this tutorial). Next we run the correlated version of CPBayes for this example data.\n\n  \n```{r cor_example, collapse = TRUE}\n# Run the correlated version of CPBayes.\nresult <- cpbayes_cor(cBetaHat, cSE, cor, Phenotypes = traitNames, Variant = SNP1)\n```\n\n\nThere are more options of arguments to pass into the function (see the Arguments section of cpbayes\\_cor in the CPBayes manual). After running cpbayes\\_cor, it prints the log10(Bayes factor) (denoted as log10\\_BF) and the subset of non-null/associated traits (denoted as subset) produced by CPBayes. The Bayes factor evaluates the overall pleiotropic association and the subset of non-null traits are the most important phenotypes that underlie the pleiotropic signal. However, the printed outputs are only a part of 'result' which is a list that constitutes of various components. An overall summary of 'result' can be seen by using the str function (as shown below). \n\n\n```{r result_structure_cor, collapse= TRUE}\n# Overall summary of the primary results produced by cpbayes_cor.\nstr(result)\n```\n\n\nresult\\$variantName returns the name of the genetic variant specified by the user. Here, it is 'rs1234'. result\\$log10\\_BF provides the log10(Bayes factor) (discussed above). result\\$PPNA provides the posterior probability of null association which is another measure of the aggregate-level pleiotropic association. result\\$subset provides the optimal subset of associated traits selected by CPBayes. Thus, for the example data, CPBayes produced a log10(Bayes factor) of 18.9, PPNA of 1.31*10^(-22), and selected Disease9 and Disease10 as associated/non-null. A detailed interpretation of all the outputs are described in the Value section of cpbayes\\_cor in the CPBayes manual. \n\nThe post\\_summaries function provides important insights into an observed pleiotropic signal, e.g., the direction of associations, posterior mean/median and 95\\% credible interval (Bayesian analog of the confidence interval) of the unknown true genetic effect  (beta/odds ratio) on each trait, etc.\n\n\n```{r post_summary_cor, collapse= TRUE}\n# Post summary of the MCMC data produced by cpbayes_cor.\nPleioSumm <- post_summaries(result, level = 0.05)  \nstr(PleioSumm)\n```\n\npost\\_summaries works exactly in the same way for both cpbayes\\_cor and cpbayes\\_uncor. Thus, we need to pass the list 'result' returned by cpbayes\\_cor as the first argument and 'level' as the second argument into the post\\_summaries function. If 'level' is not specified, the default value is 0.05. Note that post\\_summaries computes (1-level)\\% credible interval for the unknown true genetic effect (beta/odds ratio) on each trait. It provides the direction of the association with the important traits, the vector of trait-specific posterior probability of association (PPAj), etc. For detailed description of different outputs provided by post\\_summaries, please see the Value section of post_summaries in the CPBayes manual.\n\n# An example demonstrating how to run estimate_corln\nThe function estimate\\_corln estimates the correlation matrix of the beta-hat vector for multiple overlapping case-control studies or a cohort study using the sample-overlap matrices which describe the number of cases or controls shared between studies/traits, and the number of subjects who are case for one study/trait but control for another study/trait. \n\n```{r corln_estimation_example, collapse = TRUE}\n# Example data of sample-overlap matrices\nSampleOverlapMatrixFile <- system.file(\"extdata\", \"SampleOverlapMatrix.rda\", package = \"CPBayes\")\nload(SampleOverlapMatrixFile)\nSampleOverlapMatrix\n```\n\nSampleOverlapMatrix is a list that contains an example of the sample overlap matrices for five different diseases in the Kaiser GERA cohort (a real data). The list constitutes of three matrices as follows. SampleOverlapMatrix\\$n11 provides the number of cases shared between all possible pairs of studies/traits. SampleOverlapMatrix\\$n00 provides the number of controls shared between all possible pairs of studies/traits. SampleOverlapMatrix\\$n10 provides the number of subjects who are case for one study/trait and control for another study/trait. For more detailed explanation, see the Arguments section of estimate\\_corln in the CPBayes manual. \n\n```{r run_corln_estimation, collapse = TRUE}\n# Estimate the correlation matrix of correlated beta-hat vector\nn11 <- SampleOverlapMatrix$n11\nn00 <- SampleOverlapMatrix$n00\nn10 <- SampleOverlapMatrix$n10\ncor <- estimate_corln(n11, n00, n10)\ncor\n```\n\n The function estimate\\_corln computes an approximate correlation matrix of the correlated beta-hat vector obtained from multiple overlapping case-control studies or a cohort study. Note that for a cohort study, such overlap between cases and controls is natural due to measuring phenotypes on the same group of individuals. This approximation of correlation structure using the sample-overlap matrices is more accurate when none of the diseases/traits is associated with the environmental covariates in the study. While demonstrating cpbayes\\_cor, we used simulated data for 10 overlapping case-control studies with each study having a distinct set of 7000 cases and a common set of 10000 controls shared across all the studies. We used the estimate\\_corln function to estimate the correlation matrix of the correlated beta-hat vector using the sample-overlap matrix.  \n \n ***Important note on the estimation of correlation structure of correlated beta-hat vector:*** In general, environmental covariates are expected to be present in a study and associated with the phenotypes of interest. Hence the above approximation of the correlation matrix may not be completely accurate. So, in presence of environmental covariates, we recommend an alternative strategy to estimate the correlation matrix using the genome-wide summary statistics data across traits as follows. First, extract all the SNPs for each of which the trait-specific univariate association p-value across all the traits are > 0.1. The trait-specific univariate association p-values can be obtained based on the beta-hat and standard error for each trait. Each of the SNPs selected in this way is either weakly or not associated with any of the phenotypes (null SNP). Next, select a set of independent null SNPs from the initial set of null SNPs by using a threshold of r^2 < 0.01 (r: the correlation between the genotypes at a pair of SNPs). Finally, compute the correlation matrix of the effect estimates (beta-hat vector) as the sample correlation matrix of the beta-hat vector across all the selected independent null SNPs. This strategy is more general and applicable to a cohort study or multiple overlapping studies for binary or quantitative traits with arbitrary distributions. Misspecification of the correlation structure can affect the results produced by CPBayes to some extent. Hence, if genome-wide summary statistics data across traits is available, we recommend to use this alternative strategy to estimate the correlation matrix of the beta-hat vector. \n \n See our paper for more details: Arunabha Majumdar, Tanushree Haldar, Sourabh Bhattacharya, John Witte. An efficient Bayesian meta-analysis approach for studying cross-phenotype genetic associations (submitted). Available at: http://biorxiv.org/content/early/2017/01/18/101543.\n",
    "created" : 1485161267957.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2952360218",
    "id" : "C964A8AC",
    "lastKnownWriteTime" : 1485161338,
    "last_content_update" : 1485161338742,
    "path" : "~/Dropbox/CPBAYES/Rpackage/CPBayes/vignettes/cpbayes.Rmd",
    "project_path" : "vignettes/cpbayes.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}