devtools::load_all()
cpbayes_uncor(1:2, 1:2, 1:2)
cpbayes_uncor(1:2, 1:2, rep(1,2))
cpbayes_uncor(1:2, 1:2, rep("a",2))
cpbayes_uncor(1:2, 1:2, c("A,", "B"))
cpbayes_uncor(1:2, 1:2, c("A,", "B", 1))
cpbayes_uncor(1:2, 1:2, c("A", "B", ""))
cpbayes_uncor(1:2, 1:2, Variant=as.matrix("A"))
cpbayes_uncor(1:2, 1:2, Varia=as.matrix("A"))
A <- cpbayes_uncor(1:2, 1:2, ria=as.matrix("A"))
A <- cpbayes_uncor(1:2, 1:2, Variant =as.matrix("A"))
is.atomic(as.matrix("A"))
is.atomic(as.matrix(c("phen1", "phen2")))
cpbayes_uncor(1:2, 1:2, as.matrix(c("phen1", "phen2")))
is.vactor(as.matrix(c("phen1", "phen2")))
is.vector(as.matrix(c("phen1", "phen2")))
is.vector(as.matrix(1:2)
)
is.vector(as.data.frame(c("phen1", "phen2")))
A <- cpbayes_uncor(1:2, 1:2, Variant =as.matrix("A"))
devtools::load_all()
A <- cpbayes_uncor(1:2, 1:2, Variant =as.matrix("A"))
test()
devtools::test()
A <- cpbayes_uncor(1:2, 1:2, Variant =as.data.frame("A"))
A <- cpbayes_uncor(1:2, 1:2, Variant =1)
devtools::test()
devtools::load_all()
devtools::test()
A <- cpbayes_uncor(1:2, 1:2, Variant =1:2)
A <- cpbayes_uncor(1:2, 1:2, Variant =NA)
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
devtools::test()
devtools::load_all()
devtools::test()
A <- cpbayes_uncor(1:2, 1:2, UpdateDE = "TRUE")
A <- cpbayes_uncor(1:2, 1:2, UpdateDE = 1)
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = 1)
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = "a")
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = "123")
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = -1)
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = 123.5)
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = c(10000, 20000))
devtools::load_all()
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = c(10000, 20000))
devtools::load_all()
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = c(10000, 20000))
devtools::load_all()
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = c(10000, 20000))
devtools::load_all()
devtools::test()
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = as.matrix(c(10000, 20000))
)
A <- cpbayes_uncor(1:2, 1:2, MCMCiter = 1:2)
A <- cpbayes_uncor(1:2, 1:2, UpdateDE  = 1:2)
A <- cpbayes_uncor(1:2, 1:2, Burnin = 1)
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
A <- cpbayes_uncor(1:2, 1:2, Burnin = 10000, MCMCiter = 10000)
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
A <- cpbayes_uncor(1:2, 1:2, Burnin = 10000, MCMCiter = 12000)
A <- cpbayes_uncor(1:2, 1:2, Burnin = 14000, MCMCiter = 12000)
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
cpbayes_cor(1:10, 1:10)
cpbayes_cor(1, 1:10)
cor
cpbayes_cor(1, 1:10, cor)
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
cpbayes_cor(1:10, 1:10, cor, as.matrix(c("phen1", "phen2")))
cpbayes_cor(1:10, 1:10, cor, as.data.frame(c("phen1", "phen2")))
cpbayes_cor(1:10, 1:10, cor, Variant =as.matrix("A"))
cpbayes_cor(1:10, 1:10, cor, Variant =as.data.frame("A"))
cpbayes_cor(1:10, 1:10, cor, Variant =1)
cpbayes_cor(cBetaHat, cSE, cor, Variant =1)
cpbayes_cor(cBetaHat, cSE, cor)
length(cBetaHat)
length(cSE)
dim(cor)
cSE
cor
diag(cSE)
diag(cSE)%*%cor%*%diag(cSE)
COR <- checkCorln(cor)
dim(COR)
COR
BetaHat <- cBetaHat
SE <- cSE
Corln <- cor
# Check whether any of the primary arguments is missing
if(missing(BetaHat) || missing (SE))
stop("BetaHat or SE vector is missing!", call. = FALSE)
if(missing(Corln))
stop("Correlation matrix is missing!", call. = FALSE)
# Argument 1 :: BetaHat
checkPrimaryVar(BetaHat, "BetaHat")
# Argument 2 :: SE
checkPrimaryVar(SE, "SE")
# Check whether all entries are strictly positive
if(!all(SE > 0))
stop("One or more elements in the SE vector are not positive!", call. = FALSE)
# Argument 1 and 2 ::
if(length(BetaHat) != length(SE))
stop("BetaHat and SE vectors must have the same number of elements!", call. = FALSE)
# Argument 3 :: Correlation
COR <- checkCorln(Corln)
# Argument 4 :: Phenotype names
if(!missing(Phenotypes))
checkPhen(Phenotypes, BetaHat)
else Phenotypes = paste("trait", 1:length(BetaHat), sep = "")
# Argument 5 :: Variant name
if(!missing(Variant))
{
Variant <- checkVarName(Variant)
variantName <- unname(Variant)           # Assignment
}
else variantName <- "Variant"
Phenotypes = paste("trait", 1:length(BetaHat), sep = "")
variantName <- unname(Variant)
variantName <- "Variant"
UpdateDE <- TRUE
MCMCiter <- 20000
Burnin <- 10000
CPBayes_cor( variantName, Phenotypes, COR, BetaHat, SE, UpdateDE, MCMCiter, Burnin )
variantName
Phenotypes
COR
BetaHat
SE
cSE
cor
CPBayes_cor( variantName, Phenotypes, COR, cBetaHat, cSE, UpdateDE, MCMCiter, Burnin )
CPBayes_cor( variantName, Phenotypes, cor, cBetaHat, cSE, UpdateDE, MCMCiter, Burnin )
devtools::load_all()
cpbayes_cor(cBetaHat, cSE, cor)
A <- cpbayes_cor(cBetaHat, cSE, cor)
str(A)
cpbayes_uncor(cBetaHat, cSE)
devtools::load_all()
cpbayes_uncor(cBetaHat, cSE)
devtools::load_all()
cpbayes_uncor(cBetaHat, cSE)
post_summaries(A)
post_summaries(A, level = 0.05)
B <- post_summaries(A, level = 0.05)
B
devtools::load_all()
cpbayes_uncor(BetaHat, SE)
